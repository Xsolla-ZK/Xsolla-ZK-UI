/**
 * This file is automatically generated by @xsolla-zk-ui/tokens
 * Do not edit it manually
 */

import type { TextStyle } from '@tamagui/core';

const presetMapping = {
  'display.350.default': {},
  'display.350.numeric': {},
  'display.350.accent': {},
  'display.350.accent-numeric': {},
  'display.400.default': {},
  'display.400.numeric': {},
  'display.400.accent': {},
  'display.400.accent-numeric': {},
  'display.450.default': {},
  'display.450.numeric': {},
  'display.450.accent': {},
  'display.450.accent-numeric': {},
  'display.500.default': {},
  'display.500.numeric': {},
  'display.500.accent': {},
  'display.500.accent-numeric': {},
  'display.600.default': {},
  'display.600.numeric': {},
  'display.600.accent': {},
  'display.600.accent-numeric': {},
  'display.650.default': {},
  'display.650.numeric': {},
  'display.650.accent': {},
  'display.650.accent-numeric': {},
  'display.700.default': {},
  'display.700.numeric': {},
  'display.700.accent': {},
  'display.700.accent-numeric': {},
  'text.150.default': {
    marginBottom: 2,
  },
  'text.150.numeric': {
    marginBottom: 2,
  },
  'text.150.accent': {
    marginBottom: 2,
  },
  'text.150.accent-numeric': {
    marginBottom: 2,
  },
  'text.200.default': {
    marginBottom: 4,
  },
  'text.200.numeric': {
    marginBottom: 4,
  },
  'text.200.accent': {
    marginBottom: 4,
  },
  'text.200.accent-numeric': {
    marginBottom: 4,
  },
  'text.250.default': {
    marginBottom: 6,
  },
  'text.250.numeric': {
    marginBottom: 6,
  },
  'text.250.accent': {
    marginBottom: 6,
  },
  'text.250.accent-numeric': {
    marginBottom: 6,
  },
  'text.300.default': {
    marginBottom: 8,
  },
  'text.300.numeric': {
    marginBottom: 8,
  },
  'text.300.accent': {
    marginBottom: 8,
  },
  'text.300.accent-numeric': {
    marginBottom: 8,
  },
  'text.350.default': {
    marginBottom: 10,
  },
  'text.350.numeric': {
    marginBottom: 10,
  },
  'text.350.accent': {
    marginBottom: 10,
  },
  'text.350.accent-numeric': {
    marginBottom: 10,
  },
  'text.400.default': {
    marginBottom: 12,
  },
  'text.400.numeric': {
    marginBottom: 12,
  },
  'text.400.accent': {
    marginBottom: 12,
  },
  'text.400.accent-numeric': {
    marginBottom: 12,
  },
  'compact.150.default': {},
  'compact.150.numeric': {},
  'compact.150.accent': {},
  'compact.150.accent-numeric': {},
  'compact.200.default': {},
  'compact.200.numeric': {},
  'compact.200.accent': {},
  'compact.200.accent-numeric': {},
  'compact.250.default': {},
  'compact.250.numeric': {},
  'compact.250.accent': {},
  'compact.250.accent-numeric': {},
  'compact.300.default': {},
  'compact.300.numeric': {},
  'compact.300.accent': {},
  'compact.300.accent-numeric': {},
  'compact.350.default': {},
  'compact.350.numeric': {},
  'compact.350.accent': {},
  'compact.350.accent-numeric': {},
  'compact.400.default': {},
  'compact.400.numeric': {},
  'compact.400.accent': {},
  'compact.400.accent-numeric': {},
};

type PresetKeysUnion = keyof typeof presetMapping;

type SplitKey<T extends string> = T extends `${infer First}.${infer Rest}`
  ? [First, ...SplitKey<Rest>]
  : [T];

type PresetTuple = SplitKey<PresetKeysUnion>;

function getTypographyPreset(preset: PresetKeysUnion): TextStyle {
  const [category, size, variant] = preset.split('.') as PresetTuple;

  const extra = presetMapping[preset];

  if (!extra) {
    throw new Error(`Unknown preset type: ${category}`);
  }

  return {
    fontFamily: `$${category}`,
    fontSize: `$${size}`,
    fontWeight: `$${variant}`,
    lineHeight: `$${size}`,
    ...extra,
  };
}

export default getTypographyPreset;
